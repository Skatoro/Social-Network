{"version":3,"file":"static/js/842.4acfce5b.chunk.js","mappings":"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","sources":["components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Navigate, useLocation, useNavigate} from \"react-router-dom\";\r\nimport style from \"./Login.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        clearErrors,\r\n        setError,\r\n        reset,\r\n        formState: {errors},\r\n    } = useForm({\r\n        mode: \"onBlur\",\r\n        defaultValues: {\r\n            login: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n            captcha: \"\",\r\n        }\r\n    })\r\n\r\n    const onSubmit = async (data) => {\r\n        props.login(setError, data.login, data.password, data.rememberMe, data.captcha,)\r\n        reset({\r\n            login: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n            captcha: \"\",\r\n        }, {keepErrors: true});\r\n\r\n    }\r\n\r\n    return (<form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n        <input\r\n            {...register(\"login\", {\r\n                required: \"Login is required\", minLength: {\r\n                    value: 4, message: `Min length is ${4}`\r\n                }\r\n            })}\r\n            placeholder={\"Login\"}\r\n            onClick={() => clearErrors([\"login\", \"server\"])}\r\n        />\r\n        <p>{errors.login?.message}</p>\r\n        <input\r\n            {...register(\"password\", {\r\n                required: \"Password is required\"\r\n            })}\r\n            placeholder={\"Password\"}\r\n            onClick={() => clearErrors([\"password\", \"server\"])}\r\n        />\r\n        <p>{errors.password?.message}</p>\r\n        <input\r\n            {...register(\"rememberMe\",)}\r\n            type={\"checkbox\"}\r\n        />\r\n        <br/>\r\n        {props.captchaURL && <div>\r\n            <img src={props.captchaURL}/>\r\n            <br/>\r\n            <input\r\n                {...register(\"captcha\", {\r\n                    required: \"Captcha is required\"\r\n                })}\r\n                placeholder={\"Captcha\"}\r\n                onClick={() => clearErrors([\"captcha\", \"server\"])}\r\n            />\r\n        </div>}\r\n        <p>{errors.captcha?.message}</p>\r\n        {errors.server && <div className={style.errorMessage}>\r\n            <span>{errors.server.message}</span>\r\n        </div>}\r\n        <input type={\"submit\"}/>\r\n    </form>)\r\n}\r\n\r\n\r\nlet Login = (props) => {\r\n    let location = useLocation();\r\n    if (props.isAuth) {\r\n        return location?.state?.prevUrl\r\n            ? <Navigate to={location?.state?.prevUrl}/>\r\n            :  <Navigate to={\"/profile\"}/>\r\n    }\r\n    return (<div>\r\n        <h1>\r\n            Login page\r\n        </h1>\r\n        <LoginForm login={props.login} captchaURL={props.captchaURL}/>\r\n    </div>)\r\n}\r\n\r\nexport default Login;","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {loginThunkCreator} from \"../../redux/authReducer\";\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Login\r\n                login={this.props.login}\r\n                isAuth={this.props.isAuth}\r\n                captchaURL={this.props.captchaURL}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaURL: state.auth.captchaURL,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    login: loginThunkCreator,\r\n})(LoginContainer)\r\n"],"names":["LoginForm","props","_errors$login","_errors$password","_errors$captcha","_useForm","useForm","mode","defaultValues","login","password","rememberMe","captcha","register","handleSubmit","clearErrors","setError","reset","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","keepErrors","stop","_x","apply","arguments","_jsxs","children","_jsx","_objectSpread","required","minLength","value","message","concat","placeholder","onClick","type","captchaURL","src","server","className","style","errorMessage","_location$state","_location$state2","location","useLocation","isAuth","state","prevUrl","Navigate","to","LoginContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","_Fragment","Login","this","React","connect","auth","loginThunkCreator"],"sourceRoot":""}